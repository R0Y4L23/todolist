{"version":3,"sources":["components/Show_task.js","components/Inputs.js","App.js","reportWebVitals.js","index.js"],"names":["Show_task","showIt","delH","appH","map","item","index","onDoubleClick","task","className","c","date","onClick","Inputs","useState","task_in","setTask_in","date_in","setDate_in","tasks_to_show","setTasks_to_show","onSubmit","e","preventDefault","alert","new_ob","array","length","style","margin","type","onChange","target","value","uid","array2","filter","uid2","array3","i","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMASeA,EAPG,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,KAC5B,OACI,8BACIF,EAAOG,KAAI,SAACC,EAAKC,GAAS,OAAS,sBAAiBC,cAAe,WAAKJ,EAAKE,EAAKG,OAAQC,UAAS,UAAKJ,EAAKK,EAAV,QAAhE,UAAmF,wCAAWL,EAAKG,QAAU,wCAAWH,EAAKM,QAA7H,IAAwI,wBAAQC,QAAS,WAAKV,EAAKG,EAAKG,OAAhC,oBAAxI,QAAUF,SCyD1CO,EA5DA,WAEX,MAA2BC,mBAAS,cAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA2BF,mBAAS,cAApC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAuCJ,mBAAS,CAAC,CAACN,KAAM,QAAQG,KAAM,WAAWD,EAAG,UAAW,CAACF,KAAM,OAAOG,KAAM,WAAWD,EAAG,YAAjI,mBAAOS,EAAP,KAAqBC,EAArB,KA6CA,OACI,gCACI,uBAAMC,SA9CA,SAACC,GAEX,GADAA,EAAEC,iBACY,eAAVR,GAAkC,eAAVE,GAAoC,KAAVF,GAAwB,KAAVE,EAEhEO,MAAM,wBACNR,EAAW,cACfE,EAAW,kBAGX,CACA,IAAIO,EAAO,CAACjB,KAAMO,EAAQJ,KAAMM,EAAQP,EAAG,UACvCgB,EAAMP,EAEVO,EADOA,EAAMC,QACJF,EACTL,EAAiBM,GACjBV,EAAW,cACXE,EAAW,gBA8BkBU,MAAO,CAACC,OAAO,OAAxC,UACG,uBAAOC,KAAK,OAAOC,SAAU,SAACT,GAAKN,EAAWM,EAAEU,OAAOC,QAASA,MAAOlB,IACvE,uBAAOe,KAAK,OAAOC,SAAU,SAACT,GAAKJ,EAAWI,EAAEU,OAAOC,QAASA,MAAOhB,IACvE,wBAAQa,KAAK,SAAb,yBAEH,cAAC,EAAD,CAAO7B,OAAQkB,EAAejB,KAhCxB,SAACgC,GACX,IAAIC,EAAOhB,EAAciB,QAAO,SAAC/B,GAAQ,QAASA,EAAKG,OAAO0B,MAC9Dd,EAAiBe,IA8BgChC,KA5BxC,SAACkC,GAEV,IADA,IAAIC,EAAOnB,EACHoB,EAAE,EAAEA,EAAED,EAAOX,OAAOY,IAExB,GAAGD,EAAOC,GAAG/B,OAAO6B,EACpB,CACqB,WAAdC,EAAOC,GAAG7B,EAEb4B,EAAOC,GAAG7B,EAAE,MAIZ4B,EAAOC,GAAG7B,EAAE,SAEZ,MAGRU,EAAiBkB,GACjBtB,EAAW,KACXwB,YAAW,WAAYxB,EAAWD,KAAW,WCxCtC0B,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCQSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dc6d98f1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Show_task.css'\r\nconst Show_task = ({showIt,delH,appH}) => {\r\n    return (\r\n        <div>\r\n           {showIt.map((item,index)=>{return ( <div key={index} onDoubleClick={()=>{appH(item.task)}} className={`${item.c} mar`}><h1>Task: {item.task}</h1><h3>Date: {item.date}</h3> <button onClick={()=>{delH(item.task)}}>Remove</button>   </div>   )})}\r\n        </div>\r\n    )\r\n}\r\nexport default Show_task\r\n","import React,{useState} from 'react';\r\nimport Show1 from \"./Show_task\";\r\nconst Inputs = () => {\r\n\r\n    const [task_in,setTask_in]=useState(\"Enter Task\");\r\n    const [date_in,setDate_in]=useState(\"Enter Date\");\r\n    const [tasks_to_show,setTasks_to_show]=useState([{task: 'Study',date: '15th jan',c: 'normal',},{task: 'Play',date: '17th jan',c: 'normal'}]); \r\n    const addTask=(e)=>{\r\n        e.preventDefault();\r\n        if((task_in===\"Enter Task\"||date_in===\"Enter Date\")||(task_in===\"\"||date_in===\"\"))\r\n        {\r\n            alert(\"Enter Task or Date!!\");\r\n            setTask_in(\"Enter Task\");\r\n        setDate_in(\"Enter Date\");\r\n        }\r\n        else\r\n        {\r\n        let new_ob={task: task_in,date: date_in,c: 'normal',};\r\n        let array=tasks_to_show;\r\n        let s= array.length;\r\n        array[s]=new_ob;\r\n        setTasks_to_show(array);\r\n        setTask_in(\"Enter Task\");\r\n        setDate_in(\"Enter Date\");\r\n        } \r\n    }\r\n    const delTask=(uid)=>{\r\n        let array2=tasks_to_show.filter((item)=>{return !(item.task===uid)});\r\n        setTasks_to_show(array2);\r\n    }\r\n    const appSty=(uid2)=>{\r\n        let array3=tasks_to_show;\r\n        for(let i=0;i<array3.length;i++)\r\n        {\r\n            if(array3[i].task===uid2)\r\n            {\r\n                if(array3[i].c==='normal')\r\n                {\r\n                array3[i].c='bor';\r\n                }\r\n                else\r\n                {\r\n                array3[i].c='normal';\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        setTasks_to_show(array3);\r\n        setTask_in(\".\");\r\n        setTimeout(function(){ setTask_in(task_in)}, 10);\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={addTask} style={{margin:\"5vh\"}}>\r\n               <input type=\"text\" onChange={(e)=>{setTask_in(e.target.value)}} value={task_in}/>\r\n               <input type=\"text\" onChange={(e)=>{setDate_in(e.target.value)}} value={date_in}/> \r\n               <button type=\"submit\">Add task</button>\r\n            </form>\r\n            <Show1 showIt={tasks_to_show} delH={delTask} appH={appSty}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Inputs;\r\n","import Input1 from './components/Inputs'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Input1/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}